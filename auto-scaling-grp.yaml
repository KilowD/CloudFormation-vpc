AWSTemplateFormatVersion: 2010-09-09

Description: This template creates an Auto scaling group

Metadata:
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      - 
        Label: 
          default: Export VPC Stack Name
        Parameters:
          - ExportVpcStackName
      - 
        Label: 
          default: Export ALB Stack Name
        Parameters:
          - ExportAlbStackName
      - 
        Label: 
          default: Email Address
        Parameters:
          - OperatorEMail
      - 
        Label: 
          default: Image ID
        Parameters:
          - EC2ImageID
      - 
        Label: 
          default: Launch Template Name
        Parameters:
          - WebServerLaunchTemplateName
      - 
        Label: 
          default: Instance Type
        Parameters:
          - InstanceType
      - 
        Label: 
          default: EC2 KeyPair
        Parameters:
          - EC2KeyName
  
Parameters:
  ExportVpcStackName:
    Description: The name of the vpc stack that exports values
    Type: String

  ExportAlbStackName:
    Description: The name of the alb stack that exports values
    Type: String

  OperatorEMail:
    Description: A valid EMail address to notify if there are any scaling operations
    Type: String

  EC2KeyName:
    Description: Name of an EC2 KeyPair to enable SSH access to the instance.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  EC2ImageID:
    Description: The ID of the custom AMI
    Type: AWS::EC2::Image::Id 

  WebServerLaunchTemplateName:
    AllowedPattern: '[a-zA-Z0-9\(\)\.\-/_]+'
    ConstraintDescription: Must be unique to this account. Max 128 chars. No spaces or special characters like '&', '*', '@'.
    Default: Lamp-Server-Launch-Template
    Description: Name of launch template
    Type: String

  InstanceType:
    Description: WebServers EC2 instance type.Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
    ConstraintDescription: Must be a valid EC2 instance type.

Resources:
  WebServerLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Ref WebServerLaunchTemplateName
      LaunchTemplateData:
        ImageId:  
          Ref: EC2ImageID # u can also reference as !Ref EC2ImageID
        InstanceType: !Ref InstanceType
        KeyName:  !Ref EC2KeyName
        Monitoring:
          Enabled: true
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${ExportVpcStackName}-WebServerSecurityGroup

  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref OperatorEMail
          Protocol: email

  WebServerAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: Lamp Auto Scaling Group
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-privateSubnet1
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-privateSubnet2
      HealthCheckGracePeriod: 300
      HealthCheckType:  ELB
      LaunchTemplate: 
        LaunchTemplateName: !Ref  WebServerLaunchTemplateName
        Version:  !GetAtt WebServerLaunchTemplate.LatestVersionNumber
      MinSize: 1
      MaxSize: 4
      DesiredCapacity:  2
      Tags:
        - Key:  Name
          Value:  AutoScalingGroup
          PropagateAtLaunch:  true
      TargetGroupARNs:
        - Fn::ImportValue: !Sub ${ExportAlbStackName}-ALBTargetGroup
      NotificationConfiguration:
        TopicARN:
        NotificationTypes:
          - 'autoscaling:EC2_INSTANCE_LAUNCH'
          - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
          - 'autoscaling:EC2_INSTANCE_TERMINATE'
          - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
  
  WebServerScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
      Cooldown:
      ScalingAdjustment:

  WebServerScaleDownPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
      Cooldown:
      ScalingAdjustment:

  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-up if CPU > 90% for 10 minutes
      MetricName: CPUUtilization
      Namespace: 
      Statistic: 
      Period: 
      EvaluationPeriods: 
      Threshold: 
      AlarmActions:
      Dimensions:
        - Name:
          Value:
      ComparisonOperator: GreaterThanThreshold

  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-down if CPU < 70% for 10 minutes
      MetricName: CPUUtilization
      Namespace: 
      Statistic: 
      Period:
      EvaluationPeriods:
      Threshold:
      AlarmActions:
      Dimensions:
        - Name:
          Value:
      ComparisonOperator: 

